swagger: '2.0'
host: abcd-001.dx.commercecloud.salesforce.com
info:
  description: 'Data API endpoints enable developers to build applications for merchants:
    Create, update, delete business objects, like products, customers, pricing and
    promotions or assignments. They typically provide read and write access and are
    designed for moderate usage.'
  title: Data API
  version: '24.1'
basePath: /s/-/dw/data/v24.1
consumes:
- application/json
- text/xml
- application/xml
produces:
- application/json
- text/xml
- application/xml
securityDefinitions:
  oauth2_application:
    description: Authentication flow with client ID and password with account manager.
    flow: application
    tokenUrl: https://account.demandware.com:443/dw/oauth2/access_token
    type: oauth2
  client_id:
    description: Add client ID for application identification. Alternative as 'client_id'
      query parameter.
    in: header
    name: x-dw-client-id
    type: apiKey
definitions:
  campaign:
    description: Document representing a campaign.
    properties:
      campaign_id:
        description: The ID of the campaign.
        x-label:
          default: ID
        maxLength: 256
        minLength: 1
        type: string
      coupons:
        description: The array of assigned coupon IDs, not sorted
        items:
          type: string
        type: array
      creation_date:
        description: Returns the value of attribute 'creationDate'.
        format: date-time
        x-label:
          default: Creation Date
        readOnly: true
        type: string
      customer_groups:
        description: The array of assigned customer groups, not sorted
        items:
          type: string
        type: array
      description:
        description: The description of the campaign.
        format: text
        x-label:
          default: Description
        maxLength: 4000
        type: string
      enabled:
        description: The enabled flag for campaign.
        type: boolean
      end_date:
        description: The date that the Scenario ends
        format: date-time
        x-label:
          default: End Date
        type: string
      last_modified:
        description: Returns the value of attribute 'lastModified'.
        format: date-time
        x-label:
          default: Last Modified
        readOnly: true
        type: string
      link:
        description: link for convenience
        type: string
      source_code_groups:
        description: The array of assigned source code groups, not sorted
        items:
          type: string
        type: array
      start_date:
        description: The date that the Scenario begins
        format: date-time
        x-label:
          default: Start Date
        type: string
paths:
  /sites/{site_id}/campaigns/{campaign_id}:
    delete:
      description: Deletes the campaign by ID
      operationId: deleteSitesByIDCampaignsByID
      parameters:
      - description: The site context.
        in: path
        minLength: 1
        name: site_id
        required: true
        type: string
      - description: A campaign id to remove
        in: path
        name: campaign_id
        required: true
        type: string
      responses:
        '204':
          description: ''
      security:
      - oauth2_application: []
      tags:
      - sites
    get:
      description: Action to get campaign information.
      operationId: getSitesByIDCampaignsByID
      parameters:
      - description: The site the requested campaign belongs to.
        in: path
        minLength: 1
        name: site_id
        required: true
        type: string
      - description: The id of the requested campaign.
        in: path
        minLength: 1
        name: campaign_id
        required: true
        type: string
      responses:
        default:
          description: ''
          schema:
            $ref: '#/definitions/campaign'
        '404':
          description: '`CampaignNotFoundException` - Thrown in case the campaign
            does not exist matching the given id'
      security:
      - oauth2_application: []
      tags:
      - sites
    patch:
      description: Updates the campaign with the specified information.
      operationId: patchSitesByIDCampaignsByID
      parameters:
      - description: The site context.
        in: path
        minLength: 1
        name: site_id
        required: true
        type: string
      - description: The id of the requested campaign.
        in: path
        minLength: 1
        name: campaign_id
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/campaign'
      responses:
        default:
          description: ''
          schema:
            $ref: '#/definitions/campaign'
        '400':
          description: '`CampaignDuplicateException` - if a campaign exists already
            in the site with the given campaign id.'
        '404':
          description: '`CampaignNotFoundException` - Thrown in case the campaign
            does not exist matching the given id'
      security:
      - oauth2_application: []
      tags:
      - sites
    put:
      description: Creates a campaign using the information provided.
      operationId: putSitesByIDCampaignsByID
      parameters:
      - description: The site context.
        in: path
        minLength: 1
        name: site_id
        required: true
        type: string
      - description: The id of the campaign to create.
        in: path
        minLength: 1
        name: campaign_id
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/campaign'
      responses:
        default:
          description: ''
          schema:
            $ref: '#/definitions/campaign'
        '400':
          description: '`IdConflictException` - if the Id in request is not the same
            as the ID in document.'
      security:
      - oauth2_application: []
      tags:
      - sites
