swagger: '2.0'
host: abcd-001.dx.commercecloud.salesforce.com
info:
  description: 'Data API endpoints enable developers to build applications for merchants:
    Create, update, delete business objects, like products, customers, pricing and
    promotions or assignments. They typically provide read and write access and are
    designed for moderate usage.'
  title: Data API
  version: '24.1'
basePath: /s/-/dw/data/v24.1
consumes:
- application/json
- text/xml
- application/xml
produces:
- application/json
- text/xml
- application/xml
securityDefinitions:
  oauth2_application:
    description: Authentication flow with client ID and password with account manager.
    flow: application
    tokenUrl: https://account.demandware.com:443/dw/oauth2/access_token
    type: oauth2
  client_id:
    description: Add client ID for application identification. Alternative as 'client_id'
      query parameter.
    in: header
    name: x-dw-client-id
    type: apiKey
definitions:
  role_webdav_permissions:
    description: Document listing the WebDAV permissions assigned to a certain role.
    properties:
      unscoped:
        description: The list of unscoped WebDAV permissions.
        items:
          $ref: '#/definitions/role_webdav_permission'
        type: array
  role_functional_permission:
    description: Document representing a functional permission.
    properties:
      name:
        description: The name of the functional permission.
        minLength: 1
        type: string
      type:
        description: The permission type ("functional").
        minLength: 1
        type: string
      value:
        description: The non domain specific value for the functional permission,
          e.g. ACCESS or READONLY.
        type: string
      values:
        additionalProperties:
          type: string
        description: The map of value per domain for the functional permission, e.g.
          ACCESS or READONLY per domain name.
        type: object
    required:
    - name
    - type
  role_permissions:
    description: Document listing the permissions assigned to a certain role (accessible
      by type).
    properties:
      functional:
        $ref: '#/definitions/role_functional_permissions'
        description: The functional permissions.
      locale:
        $ref: '#/definitions/role_locale_permissions'
        description: The locale permissions.
      module:
        $ref: '#/definitions/role_module_permissions'
        description: The module permissions.
      webdav:
        $ref: '#/definitions/role_webdav_permissions'
        description: The WebDAV permissions.
  role_module_permission:
    description: Document representing a module permission.
    properties:
      application:
        description: The permission application (e.g. "bm", "csc").
        minLength: 1
        type: string
      name:
        description: The related menu action name of the module permission.
        minLength: 1
        type: string
      system:
        description: Flag to indicate a system menu action. This is `false` for custom
          menu actions.
        type: boolean
      type:
        description: The permission type ("module").
        minLength: 1
        type: string
      value:
        description: The non domain specific value for the module permission, e.g.
          ACCESS or READONLY.
        type: string
      values:
        additionalProperties:
          type: string
        description: The map of value per domain for the module permission, e.g. ACCESS
          or READONLY per domain name.
        type: object
    required:
    - application
    - name
    - type
  role_webdav_permission:
    description: Document representing a WebDAV permission.
    properties:
      folder:
        description: The related folder of the WebDAV permission.
        minLength: 1
        type: string
      type:
        description: The permission type ("webdav").
        minLength: 1
        type: string
      value:
        description: The non domain specific value for the WebDAV permission, e.g.
          ACCESS or READONLY.
        type: string
      values:
        additionalProperties:
          type: string
        description: The map of value per domain for the WebDAV permission, e.g. ACCESS
          or READONLY per domain name.
        type: object
    required:
    - folder
    - type
  role_functional_permissions:
    description: Document listing the functional permissions assigned to a certain
      role.
    properties:
      organization:
        description: The list of organization functional permissions.
        items:
          $ref: '#/definitions/role_functional_permission'
        type: array
      site:
        description: The list of site functional permissions.
        items:
          $ref: '#/definitions/role_functional_permission'
        type: array
  role_module_permissions:
    description: Document listing the module permissions assigned to a certain role.
    properties:
      organization:
        description: The list of organization module permissions.
        items:
          $ref: '#/definitions/role_module_permission'
        type: array
      site:
        description: The list of site module permissions.
        items:
          $ref: '#/definitions/role_module_permission'
        type: array
  role_locale_permission:
    description: Document representing a locale permission.
    properties:
      locale_id:
        description: The related locale id of the locale permission.
        minLength: 1
        type: string
      type:
        description: The permission type ("locale").
        minLength: 1
        type: string
      value:
        description: The non domain specific value for the locale permission, e.g.
          ACCESS or READONLY.
        type: string
      values:
        additionalProperties:
          type: string
        description: The map of value per domain for the locale permission, e.g. ACCESS
          or READONLY per domain name.
        type: object
    required:
    - locale_id
    - type
  role_locale_permissions:
    description: Document listing the locale permissions assigned to a certain role.
    properties:
      unscoped:
        description: The list of unscoped locale permissions.
        items:
          $ref: '#/definitions/role_locale_permission'
        type: array
paths:
  /roles/{id}/permissions:
    get:
      description: Retrieves a list of permissions assigned to the given role.
      operationId: getRolesByIDPermissions
      parameters:
      - description: The id of the requested access role.
        in: path
        minLength: 1
        name: id
        required: true
        type: string
      responses:
        default:
          description: ''
          schema:
            $ref: '#/definitions/role_permissions'
        '404':
          description: '`RoleNotFoundException` - If the specified access role does
            not exist.'
      security:
      - oauth2_application: []
      tags:
      - roles
    put:
      description: "Assigns permissions to the given role. This will replace the current\
        \ permission assignments. For the 'Administrator'\n role only adjustments\
        \ for custom module permissions will be processed but other given permissions\
        \ will be ignored."
      operationId: putRolesByIDPermissions
      parameters:
      - description: The id of the access role for which the permissions will be set.
        in: path
        minLength: 1
        name: id
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/role_permissions'
      responses:
        default:
          description: ''
          schema:
            $ref: '#/definitions/role_permissions'
        '400':
          description: '`InvalidPermissionTypeException` - If the type of a given
            permission does not match the expected type. or `UnknownPermissionException`
            - If the id of a given permission could not be resolved to a permission.
            or `InvalidPermissionValueException` - If a permission value is given
            that is either unknown or not supported for a certain permission. or `InvalidPermissionValueScopeException`
            - If values are given permission multi values are used where only single
            values are support or vice versa (e.g. setting ''values'' attribute of
            ModulePermissionWO in organization scope). or `DefaultLocalePermissionMissingException`
            - If no permission for the ''default'' locale is given (permission for
            ''default'' locale is mandatory). or `UnknownSiteIdException` - If a site
            specific permission is given for a site that is not known. or `DuplicatePermissionException`
            - If a permission is listed more than once within a scope. or `SystemFlagMissingException`
            - If the ''system'' flag is not set for a module permission.'
        '404':
          description: '`RoleNotFoundException` - If the specified access role does
            not exist.'
        '409':
          description: '`ResourceStateConflictException` - In case of state token
            conflicts.'
      security:
      - oauth2_application: []
      tags:
      - roles
