swagger: '2.0'
host: abcd-001.dx.commercecloud.salesforce.com
info:
  description: 'Data API endpoints enable developers to build applications for merchants:
    Create, update, delete business objects, like products, customers, pricing and
    promotions or assignments. They typically provide read and write access and are
    designed for moderate usage.'
  title: Data API
  version: '24.1'
basePath: /s/-/dw/data/v24.1
consumes:
- application/json
- text/xml
- application/xml
produces:
- application/json
- text/xml
- application/xml
securityDefinitions:
  oauth2_application:
    description: Authentication flow with client ID and password with account manager.
    flow: application
    tokenUrl: https://account.demandware.com:443/dw/oauth2/access_token
    type: oauth2
  client_id:
    description: Add client ID for application identification. Alternative as 'client_id'
      query parameter.
    in: header
    name: x-dw-client-id
    type: apiKey
definitions:
  category_link:
    description: Document representing a category link
    properties:
      last_modified:
        description: The date the link was last modified
        format: date-time
        type: string
      link:
        description: URL that is used to get this instance
        type: string
      position:
        description: The position in the source catalog / category for this link relative
          to the other links in the same category.
        format: double
        minimum: 0
        type: number
      source_catalog_id:
        description: The source catalog for the link
        type: string
      source_catalog_name:
        additionalProperties:
          type: string
        description: The name of the source catalog
        format: localized
        type: object
      source_category_id:
        description: The source category for the link
        type: string
      source_category_name:
        additionalProperties:
          type: string
        description: The name of the source category
        format: localized
        type: object
      target_catalog_id:
        description: The target category for the link
        type: string
      target_catalog_name:
        additionalProperties:
          type: string
        description: The name of the target catalog
        format: localized
        type: object
      target_category_id:
        description: The target category for the link
        type: string
      target_category_name:
        additionalProperties:
          type: string
        description: The name of the target category
        format: localized
        type: object
      type:
        description: The link type
        enum:
        - other
        - accessories
        - cross_selling
        - up_selling
        - spare_parts
        type: string
paths:
  /catalogs/{catalog_id}/categories/{category_id}/category_links/{target_catalog_id}/{target_category_id}/{type}:
    delete:
      description: Deletes the category link by ID
      operationId: deleteCatalogsByIDCategoriesByIDCategoryLinksByIDByIDByID
      parameters:
      - description: The id of the source catalog.
        in: path
        minLength: 1
        name: catalog_id
        required: true
        type: string
      - description: The id of the source category.
        in: path
        minLength: 1
        name: category_id
        required: true
        type: string
      - description: The id of the target catalog.
        in: path
        minLength: 1
        name: target_catalog_id
        required: true
        type: string
      - description: The id of the target category.
        in: path
        minLength: 1
        name: target_category_id
        required: true
        type: string
      - description: the link type
        in: path
        name: type
        required: true
        type: string
      responses:
        '204':
          description: ''
        '404':
          description: '`CatalogNotFoundException` - Thrown in case the source catalog
            or the target catalog do not exist or `CategoryNotFoundException` - Thrown
            in case the source category or the target category do not exist or `CategoryLinkNotFoundException`
            - Thrown in case the category link does not exist from the source catalog/category
            to the destination catalog/category with the given type.'
      security:
      - oauth2_application: []
      tags:
      - catalogs
    get:
      description: Action to get category link information.
      operationId: getCatalogsByIDCategoriesByIDCategoryLinksByIDByIDByID
      parameters:
      - description: The id of the source catalog.
        in: path
        minLength: 1
        name: catalog_id
        required: true
        type: string
      - description: The id of the source category.
        in: path
        minLength: 1
        name: category_id
        required: true
        type: string
      - description: The id of the target catalog.
        in: path
        minLength: 1
        name: target_catalog_id
        required: true
        type: string
      - description: The id of the target category.
        in: path
        minLength: 1
        name: target_category_id
        required: true
        type: string
      - description: the link type
        in: path
        name: type
        required: true
        type: string
      - description: Optional select clause for getting fields from the returned JSON
          document.
        in: query
        name: select
        type: string
      responses:
        default:
          description: ''
          schema:
            $ref: '#/definitions/category_link'
        '404':
          description: '`CatalogNotFoundException` - Thrown in case the source catalog
            or the target catalog do not exist or `CategoryNotFoundException` - Thrown
            in case the source category or the target category do not exist or `CategoryLinkNotFoundException`
            - Thrown in case the category link does not exist from the source catalog/category
            to the destination catalog/category with the given type.'
      security:
      - oauth2_application: []
      tags:
      - catalogs
    patch:
      description: Updates the category link with the specified information.
      operationId: patchCatalogsByIDCategoriesByIDCategoryLinksByIDByIDByID
      parameters:
      - description: The id of the source catalog.
        in: path
        minLength: 1
        name: catalog_id
        required: true
        type: string
      - description: The id of the source category.
        in: path
        minLength: 1
        name: category_id
        required: true
        type: string
      - description: The id of the target catalog.
        in: path
        minLength: 1
        name: target_catalog_id
        required: true
        type: string
      - description: The id of the target category.
        in: path
        minLength: 1
        name: target_category_id
        required: true
        type: string
      - description: the link type
        in: path
        name: type
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/category_link'
      responses:
        default:
          description: ''
          schema:
            $ref: '#/definitions/category_link'
        '404':
          description: '`CatalogNotFoundException` - Thrown in case the source catalog
            or the target catalog do not exist or `CategoryNotFoundException` - Thrown
            in case the source category or the target category do not exist or `CategoryLinkNotFoundException`
            - Thrown in case the category link does not exist from the source catalog/category
            to the destination catalog/category with the given type.'
      security:
      - oauth2_application: []
      tags:
      - catalogs
    put:
      description: "Creates a category link using the information provided. If a category\
        \ link with the same unique identifier,\n it will be updated with the new\
        \ position."
      operationId: putCatalogsByIDCategoriesByIDCategoryLinksByIDByIDByID
      parameters:
      - description: The id of the source catalog.
        in: path
        minLength: 1
        name: catalog_id
        required: true
        type: string
      - description: The id of the source category.
        in: path
        minLength: 1
        name: category_id
        required: true
        type: string
      - description: The id of the target catalog.
        in: path
        minLength: 1
        name: target_catalog_id
        required: true
        type: string
      - description: The id of the target category.
        in: path
        minLength: 1
        name: target_category_id
        required: true
        type: string
      - description: the link type
        in: path
        name: type
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/category_link'
      responses:
        default:
          description: ''
          schema:
            $ref: '#/definitions/category_link'
        '404':
          description: '`CatalogNotFoundException` - Thrown in case the source catalog
            or the target catalog do not exist or `CategoryNotFoundException` - Thrown
            in case the source category or the target category do not exist'
      security:
      - oauth2_application: []
      tags:
      - catalogs
