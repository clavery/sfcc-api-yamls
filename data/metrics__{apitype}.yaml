swagger: '2.0'
host: abcd-001.dx.commercecloud.salesforce.com
info:
  description: 'Data API endpoints enable developers to build applications for merchants:
    Create, update, delete business objects, like products, customers, pricing and
    promotions or assignments. They typically provide read and write access and are
    designed for moderate usage.'
  title: Data API
  version: '24.1'
basePath: /s/-/dw/data/v24.1
consumes:
- application/json
- text/xml
- application/xml
produces:
- application/json
- text/xml
- application/xml
securityDefinitions:
  oauth2_application:
    description: Authentication flow with client ID and password with account manager.
    flow: application
    tokenUrl: https://account.demandware.com:443/dw/oauth2/access_token
    type: oauth2
  client_id:
    description: Add client ID for application identification. Alternative as 'client_id'
      query parameter.
    in: header
    name: x-dw-client-id
    type: apiKey
definitions:
  metric_response:
    description: Metrics in Prometheus Exposition Format wrapped as Json array of
      strings.
    properties:
      limit:
        description: Page size of result page
        format: int32
        type: integer
      metrics:
        description: "Metrics in Prometheus Exposition Format.  A single metric is\
          \ represented by a single line. They have a name, labels (dimensions), a\
          \ value and a time-stamp.  Example: OCAPI request: `GET /v21.10/products/{Id}/prices`\
          \ total time metric: `products_Id_prices{method=\\\"GET\\\",version=\\\"\
          v21.10\\\",path1=\\\"products\\\",path2=\\\"prices\\\",status=\\\"2xx\\\"\
          } 112.718755 1620735785000`  The individual elements of a metric line are\
          \ the metric name, metric dimensions (denoted by label / value pairs in\
          \ curly braces), the actual metric value (in milliseconds or in operations\
          \ / second for metrics ending in `_m1rate`) and a time-stamp in milliseconds\
          \ since 01/01/1970 UTC.    **name**   The metric name will have both path\
          \ segments and parameters separated by \u2018_\u2019.       Path segments\
          \ in the metric name are in lower-case whereas path parameters are formatted\
          \ in camel-case.       **method**   the HTTP method of the OCAPI request,\
          \ one of `GET, PUT, POST, DELETE`    **version**   the version of the OCAPI\
          \ request, e.g. v20.8    **path1** .. **pathN**   The path segments (not\
          \ including the path-parameters) of the OCAPI request, from the example\
          \ above, the path       segments will be mapped to labels as: `path1=\\\"\
          products\\\", path2=\\\"prices\\\"`       **breakdown**   Sub-timings of\
          \ the request, in particular:            - **total** (implicit): total timings\
          \ of the request (sum of the three breakdowns below). This dimension is\
          \ denoted with no label.       - **platform**: amount of time spent in platform\
          \ code (including database-tier)       - **custom**: amount of time spent\
          \ in custom code (including database-tier)       - **thirdParty**: amount\
          \ of time spent invoking third party services through the service framework\
          \            **status**               - **2xx**: metrics for all requests\
          \ with a status code between 200 and 299       - **3xx**: metrics for all\
          \ requests with a status code between 300 and 399       - **4xx**: metrics\
          \ for all requests with a status code between 400 and 499       - **5xx**:\
          \ metrics for all requests with a status code between 500 and 599      \
          \      **quantile**               - **p50**: median timings       - **p95**:\
          \ timings for the 95th percentile of all requests            **serviceId**\
          \ (only for metrics where breakdown = thirdParty)   the `id` of the third\
          \ party service that was invoked during the request. If multiple services\
          \ were invoked,       timings for each individual service are available\
          \   "
        items:
          type: string
        type: array
      offset:
        description: Offset of result page
        format: int32
        type: integer
      total:
        description: Total number of metrics
        format: int32
        type: integer
paths:
  /metrics/{apitype}:
    get:
      description: The metrics resource provides insights into runtimes of individual
        OCAPI requests against the shop or the data-API. Responses of the metrics
        resource are JSON wrapped metrics in Prometheus Exposition format. For each
        OCAPI resource, following metrics are available for the given dimension and
        the current time-frame (1-minute averages).    - average time of a request
        (p50 and p95 timings are available under the quantile dimension) in milliseconds   -
        minimum time of all requests in milliseconds   - maximum time of all requests
        in milliseconds   - m1-rate, or the one-minute-rate of requests in operations
        / second  Refer to the documentation of the response document for a detailed
        description of the metrics and dimensions exposed by this API.
      operationId: getMetricsByID
      parameters:
      - description: Type of the api. Values are `data` or `shop`.
        in: path
        minLength: 1
        name: apitype
        required: true
        type: string
      - description: Optional offset of the result set not counting commentaries or
          empty lines.
        format: int32
        in: query
        minimum: 0
        name: offset
        type: integer
      - description: Optional limit of the result set not counting commentaries or
          empty lines.
        format: int32
        in: query
        maximum: 4500
        minimum: 1
        name: limit
        type: integer
      responses:
        default:
          description: ''
          schema:
            $ref: '#/definitions/metric_response'
        '400':
          description: '`TooManyRequestsException` - Too many requests.'
        '403':
          description: '`FeatureNotEnabledException` - Feature not enabled.'
      security:
      - oauth2_application: []
      tags:
      - metrics
