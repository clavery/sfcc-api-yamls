swagger: '2.0'
host: abcd-001.dx.commercecloud.salesforce.com
info:
  description: 'Data API endpoints enable developers to build applications for merchants:
    Create, update, delete business objects, like products, customers, pricing and
    promotions or assignments. They typically provide read and write access and are
    designed for moderate usage.'
  title: Data API
  version: '24.1'
basePath: /s/-/dw/data/v24.1
consumes:
- application/json
- text/xml
- application/xml
produces:
- application/json
- text/xml
- application/xml
securityDefinitions:
  oauth2_application:
    description: Authentication flow with client ID and password with account manager.
    flow: application
    tokenUrl: https://account.demandware.com:443/dw/oauth2/access_token
    type: oauth2
  client_id:
    description: Add client ID for application identification. Alternative as 'client_id'
      query parameter.
    in: header
    name: x-dw-client-id
    type: apiKey
definitions:
  role_webdav_permissions:
    description: Document listing the WebDAV permissions assigned to a certain role.
    properties:
      unscoped:
        description: The list of unscoped WebDAV permissions.
        items:
          $ref: '#/definitions/role_webdav_permission'
        type: array
  roles:
    description: Document representing a list of access roles.
    properties:
      count:
        format: int32
        type: integer
      data:
        description: The list of access roles.
        items:
          $ref: '#/definitions/role'
        type: array
      expand:
        items:
          type: string
        type: array
      next:
        type: string
      previous:
        type: string
      select:
        type: string
      start:
        format: int32
        minimum: 0
        type: integer
      total:
        format: int32
        type: integer
  role_functional_permission:
    description: Document representing a functional permission.
    properties:
      name:
        description: The name of the functional permission.
        minLength: 1
        type: string
      type:
        description: The permission type ("functional").
        minLength: 1
        type: string
      value:
        description: The non domain specific value for the functional permission,
          e.g. ACCESS or READONLY.
        type: string
      values:
        additionalProperties:
          type: string
        description: The map of value per domain for the functional permission, e.g.
          ACCESS or READONLY per domain name.
        type: object
    required:
    - name
    - type
  role_permissions:
    description: Document listing the permissions assigned to a certain role (accessible
      by type).
    properties:
      functional:
        $ref: '#/definitions/role_functional_permissions'
        description: The functional permissions.
      locale:
        $ref: '#/definitions/role_locale_permissions'
        description: The locale permissions.
      module:
        $ref: '#/definitions/role_module_permissions'
        description: The module permissions.
      webdav:
        $ref: '#/definitions/role_webdav_permissions'
        description: The WebDAV permissions.
  role_module_permission:
    description: Document representing a module permission.
    properties:
      application:
        description: The permission application (e.g. "bm", "csc").
        minLength: 1
        type: string
      name:
        description: The related menu action name of the module permission.
        minLength: 1
        type: string
      system:
        description: Flag to indicate a system menu action. This is `false` for custom
          menu actions.
        type: boolean
      type:
        description: The permission type ("module").
        minLength: 1
        type: string
      value:
        description: The non domain specific value for the module permission, e.g.
          ACCESS or READONLY.
        type: string
      values:
        additionalProperties:
          type: string
        description: The map of value per domain for the module permission, e.g. ACCESS
          or READONLY per domain name.
        type: object
    required:
    - application
    - name
    - type
  role_webdav_permission:
    description: Document representing a WebDAV permission.
    properties:
      folder:
        description: The related folder of the WebDAV permission.
        minLength: 1
        type: string
      type:
        description: The permission type ("webdav").
        minLength: 1
        type: string
      value:
        description: The non domain specific value for the WebDAV permission, e.g.
          ACCESS or READONLY.
        type: string
      values:
        additionalProperties:
          type: string
        description: The map of value per domain for the WebDAV permission, e.g. ACCESS
          or READONLY per domain name.
        type: object
    required:
    - folder
    - type
  role_functional_permissions:
    description: Document listing the functional permissions assigned to a certain
      role.
    properties:
      organization:
        description: The list of organization functional permissions.
        items:
          $ref: '#/definitions/role_functional_permission'
        type: array
      site:
        description: The list of site functional permissions.
        items:
          $ref: '#/definitions/role_functional_permission'
        type: array
  role_module_permissions:
    description: Document listing the module permissions assigned to a certain role.
    properties:
      organization:
        description: The list of organization module permissions.
        items:
          $ref: '#/definitions/role_module_permission'
        type: array
      site:
        description: The list of site module permissions.
        items:
          $ref: '#/definitions/role_module_permission'
        type: array
  user:
    description: Document representing a user.
    properties:
      creation_date:
        format: date-time
        type: string
      disabled:
        description: Flag whether the user is disabled.
        type: boolean
      email:
        description: The email address.
        maxLength: 256
        type: string
      external_id:
        description: The external id. This attribute is only valid when the user uses
          centralized authentication.
        maxLength: 256
        type: string
      first_name:
        description: The first name.
        maxLength: 256
        type: string
      last_login_date:
        description: Last login of the user.
        format: date
        type: string
      last_modified:
        format: date-time
        type: string
      last_name:
        description: The last name.
        maxLength: 256
        type: string
      link:
        description: URL that is used to get this instance.  This property is computed
          and cannot be modified.
        type: string
      locked:
        description: Flag whether the user is locked.
        type: boolean
      login:
        description: The user login.
        maxLength: 256
        type: string
      password:
        description: "The password. This attribute is only used to set the password\
          \ upon user creation.\n This attribute is only valid when the user does\
          \ not use centralized authentication."
        type: string
      password_expiration_date:
        description: The user password expiration time
        format: date-time
        type: string
      password_modification_date:
        description: The time, where the password was last modified
        format: date-time
        type: string
      preferred_data_locale:
        description: "The effective preferred data locale of the user. A locale is\
          \ only considered if the user has at least read\n permission on the locale."
        type: string
      preferred_ui_locale:
        description: The preferred UI locale of the user.
        type: string
      roles:
        description: List of role ids the user is assigned to.
        items:
          type: string
        type: array
    required:
    - email
    - last_name
  role_locale_permission:
    description: Document representing a locale permission.
    properties:
      locale_id:
        description: The related locale id of the locale permission.
        minLength: 1
        type: string
      type:
        description: The permission type ("locale").
        minLength: 1
        type: string
      value:
        description: The non domain specific value for the locale permission, e.g.
          ACCESS or READONLY.
        type: string
      values:
        additionalProperties:
          type: string
        description: The map of value per domain for the locale permission, e.g. ACCESS
          or READONLY per domain name.
        type: object
    required:
    - locale_id
    - type
  role_locale_permissions:
    description: Document listing the locale permissions assigned to a certain role.
    properties:
      unscoped:
        description: The list of unscoped locale permissions.
        items:
          $ref: '#/definitions/role_locale_permission'
        type: array
  role:
    description: Document representing an access role.
    properties:
      creation_date:
        format: date-time
        type: string
      description:
        description: The role description.
        type: string
      id:
        description: The role ID.
        type: string
      last_modified:
        format: date-time
        type: string
      link:
        description: URL that is used to get this instance.  This property is computed
          and cannot be modified.
        type: string
      permissions:
        $ref: '#/definitions/role_permissions'
        description: The permissions assigned to the access role. Available through
          expands.
      user_count:
        description: Number of users assigned to the role.
        format: int32
        type: integer
      user_manager:
        description: Flag whether this role is allowed to manage users or other access
          roles.
        type: boolean
      users:
        description: The users assigned to the access role. Available through expands.
        items:
          $ref: '#/definitions/user'
        type: array
paths:
  /roles:
    get:
      description: Action to get all the access roles with no filtering.
      operationId: getRoles
      parameters:
      - description: Optional start index for retrieving the items from a given index
          (default 0).
        format: int32
        in: query
        name: start
        type: integer
      - description: Optional count for retrieving only a subset of the items (default
          is 25).
        format: int32
        in: query
        name: count
        type: integer
      - description: The property selector.
        in: query
        name: select
        type: string
      - description: List of expansions.
        in: query
        items:
          type: string
        name: expand
        type: array
      responses:
        default:
          description: ''
          schema:
            $ref: '#/definitions/roles'
      security:
      - oauth2_application: []
      tags:
      - roles
