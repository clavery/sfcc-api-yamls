swagger: '2.0'
host: abcd-001.dx.commercecloud.salesforce.com
info:
  description: 'Data API endpoints enable developers to build applications for merchants:
    Create, update, delete business objects, like products, customers, pricing and
    promotions or assignments. They typically provide read and write access and are
    designed for moderate usage.'
  title: Data API
  version: '24.1'
basePath: /s/-/dw/data/v24.1
consumes:
- application/json
- text/xml
- application/xml
produces:
- application/json
- text/xml
- application/xml
securityDefinitions:
  oauth2_application:
    description: Authentication flow with client ID and password with account manager.
    flow: application
    tokenUrl: https://account.demandware.com:443/dw/oauth2/access_token
    type: oauth2
  client_id:
    description: Add client ID for application identification. Alternative as 'client_id'
      query parameter.
    in: header
    name: x-dw-client-id
    type: apiKey
definitions:
  customer_group_member_search_result:
    description: Document representing a customer group member search result.
    properties:
      count:
        description: The number of returned documents.
        format: int32
        type: integer
      data:
        items:
          type: object
        type: array
      db_start_record_:
        description: The zero-based index of the record that we want to start with,
          used to optimize special handling
        format: int32
        minimum: 0
        type: integer
      expand:
        description: List of expansions to be applied to each search results. Expands
          are optional
        items:
          type: string
        type: array
      hits:
        description: The sorted array of search hits. Can be empty.
        items:
          $ref: '#/definitions/customer_group_member'
        type: array
      next:
        $ref: '#/definitions/result_page'
        description: The URL of the next result page.
      previous:
        $ref: '#/definitions/result_page'
        description: The URL of the previous result page.
      query:
        $ref: '#/definitions/query'
        description: The query passed into the search
        x-sub_types:
          nested_query: '#/definitions/nested_query'
          filtered_query: '#/definitions/filtered_query'
          text_query: '#/definitions/text_query'
          match_all_query: '#/definitions/match_all_query'
          term_query: '#/definitions/term_query'
          bool_query: '#/definitions/bool_query'
      select:
        description: The fields that you want to select.
        type: string
      sorts:
        description: The list of sort clauses configured for the search request. Sort
          clauses are optional.
        items:
          $ref: '#/definitions/sort'
        type: array
      start:
        description: The zero-based index of the first search hit to include in the
          result.
        format: int32
        minimum: 0
        type: integer
      total:
        description: The total number of documents.
        format: int32
        type: integer
  result_page:
    description: Data that can be used to get the next and previous page of a Data
      API results object.
    properties:
      count:
        description: The number of returned documents.
        format: int32
        type: integer
      db_start_record_:
        description: The zero-based index of the record that we want to start with,
          used to optimize special handling
        format: int32
        type: integer
      start:
        description: The zero-based index of the first search hit to include in the
          result.
        format: int32
        type: integer
  query:
    description: "Document representing a query. A query contains a set of objects\
      \ that define criteria\n used to select records. A query can contain one of\
      \ the following:\n"
  search_request:
    description: Document representing a search request for retrieving items within
      the Data API. The query is a potentially complex set of expressions. The fields
      that each query supports are defined within the search resource.
    properties:
      count:
        description: The number of returned documents
        format: int32
        maximum: 200
        minimum: 1
        type: integer
      db_start_record_:
        description: The zero-based index of the record that we want to start with,
          used to optimize special handling
        format: int32
        minimum: 0
        type: integer
      expand:
        description: List of expansions to be applied to each search results. Expands
          are optional
        items:
          type: string
        type: array
      query:
        $ref: '#/definitions/query'
        description: The query to apply
        x-sub_types:
          nested_query: '#/definitions/nested_query'
          filtered_query: '#/definitions/filtered_query'
          text_query: '#/definitions/text_query'
          match_all_query: '#/definitions/match_all_query'
          term_query: '#/definitions/term_query'
          bool_query: '#/definitions/bool_query'
      select:
        description: The field to be selected.
        type: string
      sorts:
        description: The list of sort clauses configured for the search request. Sort
          clauses are optional.
        items:
          $ref: '#/definitions/sort'
        type: array
      start:
        description: The zero-based index of the first search hit to include in the
          result.
        format: int32
        minimum: 0
        type: integer
    required:
    - query
  sort:
    description: Document representing a sort request.
    properties:
      field:
        description: The name of the field to sort on.
        type: string
      sort_order:
        description: The sort order to be applied when sorting. When omitted, the
          default sort order (ASC) is used.
        enum:
        - asc
        - desc
        type: string
    required:
    - field
  customer_group_member:
    description: Document representing a customer group member
    properties:
      active:
        description: A flag indicating whether the customer is enabled and can log
          in.
        type: boolean
      c_familyStatus:
        x-label:
          default: Family Status
        type: string
      c_location:
        description: The shopper's specified location.
        format: text
        x-label:
          default: The shopper's specified location.
        type: string
      creation_date:
        description: Returns the value of attribute 'creationDate'.
        format: date-time
        x-label:
          default: Creation Date
        readOnly: true
        type: string
      customer_link:
        description: The link to the customer resource.
        maxLength: 256
        type: string
      customer_no:
        description: The customers number (id).
        x-label:
          default: Customer No.
        maxLength: 100
        type: string
      email:
        description: The customer's email address.
        format: email
        x-label:
          default: Email
        maxLength: 256
        type: string
      first_name:
        description: The customer's first name.
        x-label:
          default: First Name
        maxLength: 256
        type: string
      last_modified:
        description: Returns the value of attribute 'lastModified'.
        format: date-time
        x-label:
          default: Last Modified
        readOnly: true
        type: string
      last_name:
        description: The customer's last name.
        x-label:
          default: Last Name
        maxLength: 256
        type: string
      link:
        description: The link to the customer group member resource.
        maxLength: 256
        type: string
      login:
        description: The login of the customer.
        maxLength: 256
        type: string
paths:
  /sites/{site_id}/customer_groups/{id}/member_search:
    post:
      description: "Searches for customer group members. For dynamic customer groups\
        \ and the system groups \"Everyone\" and \"Unregistered\" no result is returned\
        \ (Status Code: 204 - No Content).\n\n The query attribute specifies a complex\
        \ query that can be used to narrow down the search. Attributes are grouped\n\
        \ into different buckets.  These are the list of searchable attributes with\
        \ their corresponding buckets:\n\n Main:\n \n      - login - String\n    \
        \  - active - Boolean\n \n Customer Profile:\n \n      - customer_no - String\n\
        \      - first_name - String\n      - last_name - String\n      - email -\
        \ String\n      - zip - String\n \n\n Only attributes in the same bucket can\
        \ be joined using a disjunction (OR).\n For instance, when joining login and\
        \ customer_no above, only a conjunction is allowed (AND), whereas customer_no\n\
        \ and email can be joined using a disjunction because they are in the same\
        \ bucket.  If an attribute\n is used in a disjunction (OR) that violates this\
        \ rule, an exception will be thrown.\n\n The output of the query can also\
        \ be sorted. These are the list of sortable attributes:\n \n - customer_no\
        \ - String\n - login - String\n \n\n If the Business manager customer search\
        \ is configured to use the new Search Service, the following differences apply:\n\
        \ \n     - all attributes can be used for sorting (except for 'active')\n\
        \     - searching for 'zip' will only search in the customers default address\n\
        \     - logical operators can be used without limits (but may result in degraded\
        \ performance, depending on how they are combined)\n     - new assignments\
        \ might not be found immediately via the search service, and removed assignments\n\
        \     might also not be in effect immediately (there is a slight delay in\
        \ updating the index)\n "
      operationId: postSitesByIDCustomerGroupsByIDMemberSearch
      parameters:
      - description: The id of the site.
        in: path
        minLength: 1
        name: site_id
        required: true
        type: string
      - description: The id of the requested members customer group.
        in: path
        minLength: 1
        name: id
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/search_request'
      responses:
        default:
          description: ''
          schema:
            $ref: '#/definitions/customer_group_member_search_result'
        '400':
          description: '`MalformedSearchParameterException` - Thrown if the query
            is ill-formed.'
        '404':
          description: '`CustomerGroupNotFoundException` - Thrown in case the customer
            group does not exist matching the given id'
      security:
      - oauth2_application: []
      tags:
      - sites
